#!/bin/bash

build_dir="$(dirname "$0")" || exit $?;
build_dir="${build_dir:-.}";
cd "$build_dir/.." || exit $?;

source build/rc;

bump_args=();
force=n;
skip_bump=n;

# Parse arguments. For now, h4x.
while [ $# -gt 0 ]; do
    if [ "$1" == -f ]; then
        force=y;
    elif [ "$1" == -G ]; then
        bump_args=("${bump_args[@]}" -G);
    elif [ "$1" == -v ]; then
        skip_bump=y;
    fi;

    shift;
done;

build_log="$(./build/compile 2>&1)";
errno=$?;

if [ $errno != 0 ]; then
    echo "$build_log" 1>&2;
    echo "Code doesn't compile... Aborting.";
    exit $errno;
fi;

if [ "$skip_bump" == n ]; then
    ./build/bump-build "${bump_args[@]}";
    errno=$?;

    version="$(get-version)" || exit $?;

    if [ $errno != 0 ]; then
        echo "Build staying at same version: $version" 1>&2;
    fi;
fi;

dist="$(get-dist)" || exit $?;

if [ -f Makefile -a "$force" == y ]; then
    build_log="$(make distclean 2>&1)";
    errno=$?;

    if [ $errno != 0 ]; then
        echo "$build_log" 1>&2;
        echo 'make distclean failed...' 1>&2;
        exit $errno;
    fi;
fi;

build_log="$(perl Makefile.PL 2>&1)";
errno=$?;

if [ $errno != 0 ]; then
    echo -n "$build_log" 1>&2;
    exit $errno;
fi;

if [ -f "$dist" ]; then
    mv -f "$dist" "$dist.old" || exit $?;
fi

build_log="$(make dist 2>&1)";
errno=$?;

if [ $errno != 0 ]; then
    echo "$build_log" 1>&2;
    exit $errno;
fi;

echo "Building $dist... done.";
